
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSEQUALS FLOAT ID INT LPAREN MINUS NUMBER PLUS PRINT RPAREN SEMIprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : type ID EQUALS expression SEMIstatement : PRINT LPAREN ID RPAREN SEMItype : INT\n            | FLOATexpression : expression PLUS expression\n                  | expression MINUS expressionexpression : NUMBERexpression : ID'
    
_lr_action_items = {'PRINT':([0,2,3,8,17,20,],[5,5,-3,-2,-4,-5,]),'INT':([0,2,3,8,17,20,],[6,6,-3,-2,-4,-5,]),'FLOAT':([0,2,3,8,17,20,],[7,7,-3,-2,-4,-5,]),'$end':([1,2,3,8,17,20,],[0,-1,-3,-2,-4,-5,]),'ID':([4,6,7,10,11,18,19,],[9,-6,-7,12,13,13,13,]),'LPAREN':([5,],[10,]),'EQUALS':([9,],[11,]),'NUMBER':([11,18,19,],[15,15,15,]),'RPAREN':([12,],[16,]),'SEMI':([13,14,15,16,21,22,],[-11,17,-10,20,-8,-9,]),'PLUS':([13,14,15,21,22,],[-11,18,-10,-8,-9,]),'MINUS':([13,14,15,21,22,],[-11,19,-10,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,8,]),'type':([0,2,],[4,4,]),'expression':([11,18,19,],[14,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',11),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement -> type ID EQUALS expression SEMI','statement',5,'p_statement_declaration','parser.py',20),
  ('statement -> PRINT LPAREN ID RPAREN SEMI','statement',5,'p_statement_print','parser.py',32),
  ('type -> INT','type',1,'p_type','parser.py',39),
  ('type -> FLOAT','type',1,'p_type','parser.py',40),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',44),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',45),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',52),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',56),
]
